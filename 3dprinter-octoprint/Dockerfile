ARG BUILD_FROM="homeassistant/amd64-base-debian:bullseye"
ARG OCTOPRINT_VERSION="1.7.3"
ARG MJPG_STREAMER_BRANCH="v1.0.0"
ARG CURA_LEGACY_BRANCH="1.15.04.6"

FROM ${BUILD_FROM} AS mjpg-streamer
ARG MJPG_STREAMER_BRANCH
RUN echo "Install mjpg-streamer" \
    && apt update \
    && apt install --no-install-recommends -y \
        git \
        make \
        cmake \
        libjpeg-dev \
        gcc \
        g++ \
    && echo "Done with apk add"
RUN echo "Install" \
    && git clone --single-branch --branch ${MJPG_STREAMER_BRANCH} https://github.com/jacksonliam/mjpg-streamer \
    && cd mjpg-streamer/mjpg-streamer-experimental/ \
    && make --silent \
    && make install --silent \
    && make clean \
    && mv www /www_mjpg
RUN echo "Copy files to single folder" \
    && mkdir -p /copy \
    && cp -R /www_mjpg /copy/www_mjpg \
    && mkdir -p /copy/usr/local/lib/ \
    && cp -R /usr/local/lib/mjpg-streamer /copy/usr/local/lib/ \
    && mkdir -p /copy/usr/local/share/ \
    && cp -R /usr/local/share/mjpg-streamer /copy/usr/local/share/ \
    && mkdir -p /copy/usr/local/bin/ \
    && cp -R /usr/local/bin/mjpg_streamer /copy/usr/local/bin/


FROM ${BUILD_FROM} AS curaengine
ARG CURA_LEGACY_BRANCH
RUN echo "Install CuraEngine" \
    && apt update \
    && apt install --no-install-recommends -y \
        git \
        cmake \
        g++ \
        make
RUN echo "Install" \
    && git clone --single-branch --branch ${CURA_LEGACY_BRANCH} https://github.com/Ultimaker/CuraEngine \
    && cd CuraEngine \
    && make --silent \
    && mv build/CuraEngine /usr/local/bin/CuraEngine
RUN echo "Copy files to single folder" \
    && mkdir -p /copy/usr/local/bin/ \
    && cp /usr/local/bin/CuraEngine /copy/usr/local/bin/CuraEngineLegacy


FROM ${BUILD_FROM} as caddy
RUN echo "deb http://deb.debian.org/debian bullseye-backports main contrib non-free" > /etc/apt/sources.list.d/bullseye-backports.list \
    && apt update \
    && apt install --no-install-recommends -y \
        golang-1.18-go \
    && /usr/lib/go-1.18/bin/go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest \
    && export PATH=$PATH:/usr/lib/go-1.18/bin:$HOME/go/bin \
    && xcaddy build \
    && mkdir -p /copy/usr/local/bin/ \
    && cp caddy /copy/usr/local/bin/caddy


FROM ${BUILD_FROM} as final
ARG OCTOPRINT_VERSION
ENV PYTHONPATH=/data/python/octoprint
ENV PYTHONUSERBASE=/data/python/octoprint
ENV PATH=${PATH}:/data/python/octoprint/bin

# Start size: 105M
RUN echo "Preliminaries" \
    && apt update \
    && apt install --no-install-recommends -y \
        python3-venv \
        python3-dev \
        build-essential \
    && python3 -m venv /data/python/octoprint \
    && source /data/python/octoprint/bin/activate \
    && pip install --upgrade \
        wheel \
    && echo "Install OctoPrint" \
    && pip install --upgrade \
        OctoPrint==${OCTOPRINT_VERSION} \
    && echo "Cleanup OctoPrint install" \
    && find /data/python/octoprint | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf \
    && find /usr/lib/python* | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf \
    && rm -rf /root/.cache \
    && echo "Package OctoPrint" \
    && mkdir -p /root \
    && cd /data && tar -zcf /root/octoprint-python.tar.gz python/octoprint \
    && ln -s /data/config/octoprint /root/.octoprint \
    && rm -rf /data \
    && echo "Install additional packages" \
    && apt install --no-install-recommends -y \
        # mjpg-streamer, camera
        gphoto2 \
        nano \
    && echo "Cleanup" \
    && apt clean

# Copy data from previous stages
## mjpg-streamer
COPY --from=mjpg-streamer /copy /
## CuraEngineLegacy
COPY --from=curaengine /copy /
## Caddy proxy
COPY --from=caddy /copy /

# Copy files into image.
COPY rootfs/ /
RUN chmod a+x /scripts/*.sh
WORKDIR /
